"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.ARecord = {
    serializedName: "ARecord",
    type: {
        name: "Composite",
        className: "ARecord",
        modelProperties: {
            ipv4Address: {
                serializedName: "ipv4Address",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AaaaRecord = {
    serializedName: "AaaaRecord",
    type: {
        name: "Composite",
        className: "AaaaRecord",
        modelProperties: {
            ipv6Address: {
                serializedName: "ipv6Address",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MxRecord = {
    serializedName: "MxRecord",
    type: {
        name: "Composite",
        className: "MxRecord",
        modelProperties: {
            preference: {
                serializedName: "preference",
                type: {
                    name: "Number"
                }
            },
            exchange: {
                serializedName: "exchange",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NsRecord = {
    serializedName: "NsRecord",
    type: {
        name: "Composite",
        className: "NsRecord",
        modelProperties: {
            nsdname: {
                serializedName: "nsdname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PtrRecord = {
    serializedName: "PtrRecord",
    type: {
        name: "Composite",
        className: "PtrRecord",
        modelProperties: {
            ptrdname: {
                serializedName: "ptrdname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SrvRecord = {
    serializedName: "SrvRecord",
    type: {
        name: "Composite",
        className: "SrvRecord",
        modelProperties: {
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            weight: {
                serializedName: "weight",
                type: {
                    name: "Number"
                }
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TxtRecord = {
    serializedName: "TxtRecord",
    type: {
        name: "Composite",
        className: "TxtRecord",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.CnameRecord = {
    serializedName: "CnameRecord",
    type: {
        name: "Composite",
        className: "CnameRecord",
        modelProperties: {
            cname: {
                serializedName: "cname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SoaRecord = {
    serializedName: "SoaRecord",
    type: {
        name: "Composite",
        className: "SoaRecord",
        modelProperties: {
            host: {
                serializedName: "host",
                type: {
                    name: "String"
                }
            },
            email: {
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            serialNumber: {
                serializedName: "serialNumber",
                type: {
                    name: "Number"
                }
            },
            refreshTime: {
                serializedName: "refreshTime",
                type: {
                    name: "Number"
                }
            },
            retryTime: {
                serializedName: "retryTime",
                type: {
                    name: "Number"
                }
            },
            expireTime: {
                serializedName: "expireTime",
                type: {
                    name: "Number"
                }
            },
            minimumTtl: {
                serializedName: "minimumTTL",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.RecordSet = {
    serializedName: "RecordSet",
    type: {
        name: "Composite",
        className: "RecordSet",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            tTL: {
                serializedName: "properties.TTL",
                type: {
                    name: "Number"
                }
            },
            aRecords: {
                serializedName: "properties.ARecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ARecordElementType",
                        type: {
                            name: "Composite",
                            className: "ARecord"
                        }
                    }
                }
            },
            aaaaRecords: {
                serializedName: "properties.AAAARecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "AaaaRecordElementType",
                        type: {
                            name: "Composite",
                            className: "AaaaRecord"
                        }
                    }
                }
            },
            mxRecords: {
                serializedName: "properties.MXRecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "MxRecordElementType",
                        type: {
                            name: "Composite",
                            className: "MxRecord"
                        }
                    }
                }
            },
            nsRecords: {
                serializedName: "properties.NSRecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "NsRecordElementType",
                        type: {
                            name: "Composite",
                            className: "NsRecord"
                        }
                    }
                }
            },
            ptrRecords: {
                serializedName: "properties.PTRRecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "PtrRecordElementType",
                        type: {
                            name: "Composite",
                            className: "PtrRecord"
                        }
                    }
                }
            },
            srvRecords: {
                serializedName: "properties.SRVRecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "SrvRecordElementType",
                        type: {
                            name: "Composite",
                            className: "SrvRecord"
                        }
                    }
                }
            },
            txtRecords: {
                serializedName: "properties.TXTRecords",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "TxtRecordElementType",
                        type: {
                            name: "Composite",
                            className: "TxtRecord"
                        }
                    }
                }
            },
            cnameRecord: {
                serializedName: "properties.CNAMERecord",
                type: {
                    name: "Composite",
                    className: "CnameRecord"
                }
            },
            soaRecord: {
                serializedName: "properties.SOARecord",
                type: {
                    name: "Composite",
                    className: "SoaRecord"
                }
            }
        }
    }
};
exports.RecordSetUpdateParameters = {
    serializedName: "RecordSetUpdateParameters",
    type: {
        name: "Composite",
        className: "RecordSetUpdateParameters",
        modelProperties: {
            recordSet: {
                serializedName: "RecordSet",
                type: {
                    name: "Composite",
                    className: "RecordSet"
                }
            }
        }
    }
};
exports.Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.Zone = {
    serializedName: "Zone",
    type: {
        name: "Composite",
        className: "Zone",
        modelProperties: __assign({}, exports.Resource.type.modelProperties, { etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }, maxNumberOfRecordSets: {
                serializedName: "properties.maxNumberOfRecordSets",
                type: {
                    name: "Number"
                }
            }, numberOfRecordSets: {
                serializedName: "properties.numberOfRecordSets",
                type: {
                    name: "Number"
                }
            }, nameServers: {
                readOnly: true,
                serializedName: "properties.nameServers",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "stringElementType",
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.ZoneDeleteResult = {
    serializedName: "ZoneDeleteResult",
    type: {
        name: "Composite",
        className: "ZoneDeleteResult",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azureAsyncOperation",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InProgress",
                        "Succeeded",
                        "Failed"
                    ]
                }
            },
            statusCode: {
                serializedName: "statusCode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Continue",
                        "SwitchingProtocols",
                        "OK",
                        "Created",
                        "Accepted",
                        "NonAuthoritativeInformation",
                        "NoContent",
                        "ResetContent",
                        "PartialContent",
                        "MultipleChoices",
                        "Ambiguous",
                        "MovedPermanently",
                        "Moved",
                        "Found",
                        "Redirect",
                        "SeeOther",
                        "RedirectMethod",
                        "NotModified",
                        "UseProxy",
                        "Unused",
                        "TemporaryRedirect",
                        "RedirectKeepVerb",
                        "BadRequest",
                        "Unauthorized",
                        "PaymentRequired",
                        "Forbidden",
                        "NotFound",
                        "MethodNotAllowed",
                        "NotAcceptable",
                        "ProxyAuthenticationRequired",
                        "RequestTimeout",
                        "Conflict",
                        "Gone",
                        "LengthRequired",
                        "PreconditionFailed",
                        "RequestEntityTooLarge",
                        "RequestUriTooLong",
                        "UnsupportedMediaType",
                        "RequestedRangeNotSatisfiable",
                        "ExpectationFailed",
                        "UpgradeRequired",
                        "InternalServerError",
                        "NotImplemented",
                        "BadGateway",
                        "ServiceUnavailable",
                        "GatewayTimeout",
                        "HttpVersionNotSupported"
                    ]
                }
            },
            requestId: {
                serializedName: "requestId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetsUpdateOptionalParams = {
    serializedName: "UpdateOptions",
    type: {
        name: "Composite",
        className: "RecordSetsUpdateOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetsCreateOrUpdateOptionalParams = {
    serializedName: "CreateOrUpdateOptions",
    type: {
        name: "Composite",
        className: "RecordSetsCreateOrUpdateOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                serializedName: "If-None-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetsDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "RecordSetsDeleteMethodOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetsListByTypeOptionalParams = {
    serializedName: "ListByTypeOptions",
    type: {
        name: "Composite",
        className: "RecordSetsListByTypeOptionalParams",
        modelProperties: {
            top: {
                serializedName: "$top",
                type: {
                    name: "Number"
                }
            },
            recordsetnamesuffix: {
                serializedName: "$recordsetnamesuffix",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetsListByDnsZoneOptionalParams = {
    serializedName: "ListByDnsZoneOptions",
    type: {
        name: "Composite",
        className: "RecordSetsListByDnsZoneOptionalParams",
        modelProperties: {
            top: {
                serializedName: "$top",
                type: {
                    name: "Number"
                }
            },
            recordsetnamesuffix: {
                serializedName: "$recordsetnamesuffix",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ZonesCreateOrUpdateOptionalParams = {
    serializedName: "CreateOrUpdateOptions",
    type: {
        name: "Composite",
        className: "ZonesCreateOrUpdateOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            },
            ifNoneMatch: {
                serializedName: "If-None-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ZonesDeleteMethodOptionalParams = {
    serializedName: "DeleteMethodOptions",
    type: {
        name: "Composite",
        className: "ZonesDeleteMethodOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ZonesListByResourceGroupOptionalParams = {
    serializedName: "ListByResourceGroupOptions",
    type: {
        name: "Composite",
        className: "ZonesListByResourceGroupOptionalParams",
        modelProperties: {
            top: {
                serializedName: "$top",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ZonesListOptionalParams = {
    serializedName: "ListOptions",
    type: {
        name: "Composite",
        className: "ZonesListOptionalParams",
        modelProperties: {
            top: {
                serializedName: "$top",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ZonesBeginDeleteMethodOptionalParams = {
    serializedName: "BeginDeleteMethodOptions",
    type: {
        name: "Composite",
        className: "ZonesBeginDeleteMethodOptionalParams",
        modelProperties: {
            ifMatch: {
                serializedName: "If-Match",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSetListResult = {
    serializedName: "RecordSetListResult",
    type: {
        name: "Composite",
        className: "RecordSetListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "RecordSetElementType",
                        type: {
                            name: "Composite",
                            className: "RecordSet"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ZoneListResult = {
    serializedName: "ZoneListResult",
    type: {
        name: "Composite",
        className: "ZoneListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        serializedName: "ZoneElementType",
                        type: {
                            name: "Composite",
                            className: "Zone"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map