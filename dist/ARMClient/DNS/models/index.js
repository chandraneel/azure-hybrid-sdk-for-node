"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Defines values for OperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
var OperationStatus;
(function (OperationStatus) {
    OperationStatus["InProgress"] = "InProgress";
    OperationStatus["Succeeded"] = "Succeeded";
    OperationStatus["Failed"] = "Failed";
})(OperationStatus = exports.OperationStatus || (exports.OperationStatus = {}));
/**
 * Defines values for HttpStatusCode.
 * Possible values include: 'Continue', 'SwitchingProtocols', 'OK', 'Created',
 * 'Accepted', 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
 * 'PartialContent', 'MultipleChoices', 'Ambiguous', 'MovedPermanently',
 * 'Moved', 'Found', 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified',
 * 'UseProxy', 'Unused', 'TemporaryRedirect', 'RedirectKeepVerb', 'BadRequest',
 * 'Unauthorized', 'PaymentRequired', 'Forbidden', 'NotFound',
 * 'MethodNotAllowed', 'NotAcceptable', 'ProxyAuthenticationRequired',
 * 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired',
 * 'PreconditionFailed', 'RequestEntityTooLarge', 'RequestUriTooLong',
 * 'UnsupportedMediaType', 'RequestedRangeNotSatisfiable', 'ExpectationFailed',
 * 'UpgradeRequired', 'InternalServerError', 'NotImplemented', 'BadGateway',
 * 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported'
 * @readonly
 * @enum {string}
 */
var HttpStatusCode;
(function (HttpStatusCode) {
    HttpStatusCode["Continue"] = "Continue";
    HttpStatusCode["SwitchingProtocols"] = "SwitchingProtocols";
    HttpStatusCode["OK"] = "OK";
    HttpStatusCode["Created"] = "Created";
    HttpStatusCode["Accepted"] = "Accepted";
    HttpStatusCode["NonAuthoritativeInformation"] = "NonAuthoritativeInformation";
    HttpStatusCode["NoContent"] = "NoContent";
    HttpStatusCode["ResetContent"] = "ResetContent";
    HttpStatusCode["PartialContent"] = "PartialContent";
    HttpStatusCode["MultipleChoices"] = "MultipleChoices";
    HttpStatusCode["Ambiguous"] = "Ambiguous";
    HttpStatusCode["MovedPermanently"] = "MovedPermanently";
    HttpStatusCode["Moved"] = "Moved";
    HttpStatusCode["Found"] = "Found";
    HttpStatusCode["Redirect"] = "Redirect";
    HttpStatusCode["SeeOther"] = "SeeOther";
    HttpStatusCode["RedirectMethod"] = "RedirectMethod";
    HttpStatusCode["NotModified"] = "NotModified";
    HttpStatusCode["UseProxy"] = "UseProxy";
    HttpStatusCode["Unused"] = "Unused";
    HttpStatusCode["TemporaryRedirect"] = "TemporaryRedirect";
    HttpStatusCode["RedirectKeepVerb"] = "RedirectKeepVerb";
    HttpStatusCode["BadRequest"] = "BadRequest";
    HttpStatusCode["Unauthorized"] = "Unauthorized";
    HttpStatusCode["PaymentRequired"] = "PaymentRequired";
    HttpStatusCode["Forbidden"] = "Forbidden";
    HttpStatusCode["NotFound"] = "NotFound";
    HttpStatusCode["MethodNotAllowed"] = "MethodNotAllowed";
    HttpStatusCode["NotAcceptable"] = "NotAcceptable";
    HttpStatusCode["ProxyAuthenticationRequired"] = "ProxyAuthenticationRequired";
    HttpStatusCode["RequestTimeout"] = "RequestTimeout";
    HttpStatusCode["Conflict"] = "Conflict";
    HttpStatusCode["Gone"] = "Gone";
    HttpStatusCode["LengthRequired"] = "LengthRequired";
    HttpStatusCode["PreconditionFailed"] = "PreconditionFailed";
    HttpStatusCode["RequestEntityTooLarge"] = "RequestEntityTooLarge";
    HttpStatusCode["RequestUriTooLong"] = "RequestUriTooLong";
    HttpStatusCode["UnsupportedMediaType"] = "UnsupportedMediaType";
    HttpStatusCode["RequestedRangeNotSatisfiable"] = "RequestedRangeNotSatisfiable";
    HttpStatusCode["ExpectationFailed"] = "ExpectationFailed";
    HttpStatusCode["UpgradeRequired"] = "UpgradeRequired";
    HttpStatusCode["InternalServerError"] = "InternalServerError";
    HttpStatusCode["NotImplemented"] = "NotImplemented";
    HttpStatusCode["BadGateway"] = "BadGateway";
    HttpStatusCode["ServiceUnavailable"] = "ServiceUnavailable";
    HttpStatusCode["GatewayTimeout"] = "GatewayTimeout";
    HttpStatusCode["HttpVersionNotSupported"] = "HttpVersionNotSupported";
})(HttpStatusCode = exports.HttpStatusCode || (exports.HttpStatusCode = {}));
/**
 * Defines values for RecordType.
 * Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA',
 * 'SRV', 'TXT'
 * @readonly
 * @enum {string}
 */
var RecordType;
(function (RecordType) {
    RecordType["A"] = "A";
    RecordType["AAAA"] = "AAAA";
    RecordType["CNAME"] = "CNAME";
    RecordType["MX"] = "MX";
    RecordType["NS"] = "NS";
    RecordType["PTR"] = "PTR";
    RecordType["SOA"] = "SOA";
    RecordType["SRV"] = "SRV";
    RecordType["TXT"] = "TXT";
})(RecordType = exports.RecordType || (exports.RecordType = {}));
//# sourceMappingURL=index.js.map